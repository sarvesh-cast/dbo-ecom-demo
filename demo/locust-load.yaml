apiVersion: apps/v1
kind: Deployment
metadata:
  name: locust-master
spec:
  replicas: 1
  selector:
    matchLabels:
      app: locust
      role: master
  template:
    metadata:
      labels:
        app: locust
        role: master
    spec:
      containers:
      - name: locust
        image: locustio/locust:latest
        command: ["locust", "-f", "/mnt/locustfile.py", "--master"]
        resources:
          requests:
            memory: "700Mi"
            cpu: "500m"
        volumeMounts:
        - name: locustfile
          mountPath: /mnt
      volumes:
      - name: locustfile
        configMap:
          name: locustfile-configmap
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: locust-worker
spec:
  replicas: 10
  selector:
    matchLabels:
      app: locust
      role: worker
  template:
    metadata:
      labels:
        app: locust
        role: worker
    spec:
      containers:
      - name: locust
        image: locustio/locust:latest
        command: ["locust", "-f", "/mnt/locustfile.py", "--worker", "--master-host", "locust-master"]
        resources:
          requests:
            memory: "500Mi"
            cpu: "250m"
          limits:
            memory: "500Mi"
            cpu: "250m"
        volumeMounts:
        - name: locustfile
          mountPath: /mnt
      volumes:
      - name: locustfile
        configMap:
          name: locustfile-configmap

---
apiVersion: v1
kind: Service
metadata:
  name: locust-master
spec:
  selector:
    app: locust
    role: master
  ports:
    - name: web
      port: 8089
      targetPort: 8089
    - name: master-worker
      port: 5557
      targetPort: 5557
  type: LoadBalancer

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: locustfile-configmap
data:
  locustfile.py: |
    from locust import HttpUser, task, between

    class WebAppUser(HttpUser):
        wait_time = between(1, 3)

        @task
        def load_homepage(self):
            self.client.get("/")

        @task
        def get_products(self):
            self.client.get("/men")

        @task
        def get_products_allstar(self):
            self.client.get("/men/allstar")

        @task
        def get_products_chuck70(self):
            self.client.get("/men/chuck70")

        @task
        def get_products_pegasus(self):
            self.client.get("/men/pegasus")

        @task
        def get_products_zoom(self):
            self.client.get("/men/zoom")

        @task
        def get_products_peg(self):
            self.client.get("/men/phantom")

        @task
        def get_products_allstar(self):
            self.client.get("/men/air")

        @task
        def get_products_chuck70(self):
            self.client.get("/men/court")

        @task
        def get_products_pegasus(self):
            self.client.get("/men/revolution")

        @task
        def get_products_zoom(self):
            self.client.get("/men/trefoil")

        @task
        def get_products_peg(self):
            self.client.get("/men/strutter")